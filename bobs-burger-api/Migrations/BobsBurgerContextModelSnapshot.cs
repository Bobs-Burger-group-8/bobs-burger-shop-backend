// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bobs_burger_api.Data;

#nullable disable

namespace bobs_burger_api.Migrations
{
    [DbContext(typeof(BobsBurgerContext))]
    partial class BobsBurgerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bobs_burger_api.Models.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("favourites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("bobs_burger_api.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "burger",
                            Name = "cheese",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "burger",
                            Name = "bun",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Category = "burger",
                            Name = "lettuce",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 4,
                            Category = "burger",
                            Name = "bobs-secret-sauce",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 5,
                            Category = "burger",
                            Name = "beef-patty",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 6,
                            Category = "burger",
                            Name = "pickle",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 7,
                            Category = "burger",
                            Name = "onion",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 8,
                            Category = "burger",
                            Name = "ketchup",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 9,
                            Category = "burger",
                            Name = "mustard",
                            Price = 1.0
                        });
                });

            modelBuilder.Entity("bobs_burger_api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean")
                        .HasColumnName("completed");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_time");

                    b.Property<List<int>>("ProductIds")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("products");

                    b.Property<double>("Total")
                        .HasColumnType("double precision")
                        .HasColumnName("total");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = true,
                            DateTime = new DateTime(2024, 3, 18, 12, 53, 28, 143, DateTimeKind.Utc).AddTicks(7332),
                            ProductIds = new List<int> { 1, 1 },
                            Total = 20.0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("bobs_burger_api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<List<int>>("Ingredients")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("ingredients");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "burger",
                            Description = "Biggest bob there is",
                            Ingredients = new List<int> { 1, 2, 3, 4, 5, 6, 7 },
                            Name = "Big Bob",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 2,
                            Category = "burger",
                            Description = "Biggest bob there is",
                            Ingredients = new List<int> { 1, 2, 4, 6, 7, 8, 9 },
                            Name = "Quarter Bob",
                            Price = 9.9900000000000002
                        });
                });

            modelBuilder.Entity("bobs_burger_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Burger Town",
                            Email = "bob@burger.com",
                            FirstName = "Bob",
                            LastName = "Burgerman",
                            Phone = "12345678",
                            Street = "Burger Street 2"
                        });
                });

            modelBuilder.Entity("bobs_burger_api.Models.Favourite", b =>
                {
                    b.HasOne("bobs_burger_api.Models.Product", "Product")
                        .WithMany("Favourites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bobs_burger_api.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("bobs_burger_api.Models.Order", b =>
                {
                    b.HasOne("bobs_burger_api.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("bobs_burger_api.Models.Product", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("bobs_burger_api.Models.User", b =>
                {
                    b.Navigation("Favourites");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
